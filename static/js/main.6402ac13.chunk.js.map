{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","pokName","setpokName","pokChosen","setPokChosen","name","type","weight","front_image","back_image","speed","hp","attack","defense","pokemon","setPokemon","className","placeholder","onChange","event","target","value","onClick","Axios","get","then","response","data","types","sprites","front_default","back_default","stats","base_stat","alert","src","alt","width","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAyGeA,MArGf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,mBAAS,CACrCK,KAAMJ,EACNK,KAAM,GACNC,OAAQ,GACRC,YAAa,GACbC,WAAY,GACZC,MAAO,GACPC,GAAI,GACJC,OAAQ,GACRC,QAAS,KATX,mBAAOC,EAAP,KAAgBC,EAAhB,KAsCA,OACE,qCACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,wBACA,uBACEA,UAAU,YACVV,KAAK,OACLW,YAAY,eACZC,SAAU,SAACC,GACTjB,EAAWiB,EAAMC,OAAOC,UAG5B,wBAAQC,QAtCI,WACH,KAAVrB,EAKDsB,IAAMC,IAAN,4CAA+CvB,IAAWwB,MAC1D,SAACC,GACCX,EAAW,CACTV,KAAMJ,EACNK,KAAMoB,EAASC,KAAKC,MAAM,GAAGtB,KAAKD,KAClCE,OAAQmB,EAASC,KAAKpB,OACtBC,YAAakB,EAASC,KAAKE,QAAQC,cACnCrB,WAAYiB,EAASC,KAAKE,QAAQE,aAClCrB,MAAOgB,EAASC,KAAKK,MAAM,GAAGC,UAC9BtB,GAAIe,EAASC,KAAKK,MAAM,GAAGC,UAC3BrB,OAAQc,EAASC,KAAKK,MAAM,GAAGC,UAC/BpB,QAASa,EAASC,KAAKK,MAAM,GAAGC,YAElC7B,GAAa,MAjBf8B,MAAM,2BAoCwBlB,UAAU,eAAtC,oBAGA,qBAAKA,UAAU,UAAf,SAAyB,6FAE3B,qBAAKA,UAAU,UAAf,SACGb,EACC,qBAAKa,UAAU,gBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,6BAAKF,EAAQT,OACb,sBAAKW,UAAU,iBAAf,UACE,qBACEmB,IAAKrB,EAAQN,YACb4B,IAAI,gBACJC,MAAM,QACNC,OAAO,UAET,qBACEH,IAAKrB,EAAQL,WACb2B,IAAI,gBACJC,MAAM,QACNC,OAAO,aAIX,sCACQxB,EAAQR,KACd,uBAFF,UAGUQ,EAAQP,OAChB,uBAJF,SAKSO,EAAQJ,MACf,uBANF,MAOMI,EAAQH,GACZ,uBARF,UASUG,EAAQF,OAChB,uBAVF,WAWWE,EAAQD,gBAKvB,oBAAIG,UAAU,mBAAd,uCCtFKuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6402ac13.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\n\nfunction App() {\n  const [pokName, setpokName] = useState(\"\");\n  const [pokChosen, setPokChosen] = useState(false);\n  const [pokemon, setPokemon] = useState({\n    name: pokName,\n    type: \"\",\n    weight: \"\",\n    front_image: \"\",\n    back_image: \"\",\n    speed: \"\",\n    hp: \"\",\n    attack: \"\",\n    defense: \"\",\n  });\n  \n  const searchPok = () => {\n    if(pokName===\"\"){\n      alert(\"Pokemon named required\");\n      return;\n    }\n    else{\n      Axios.get(`https://pokeapi.co/api/v2/pokemon/${pokName}`).then(\n      (response) => {\n        setPokemon({\n          name: pokName,\n          type: response.data.types[0].type.name,\n          weight: response.data.weight,\n          front_image: response.data.sprites.front_default,\n          back_image: response.data.sprites.back_default,\n          speed: response.data.stats[5].base_stat,\n          hp: response.data.stats[0].base_stat,\n          attack: response.data.stats[1].base_stat,\n          defense: response.data.stats[2].base_stat,\n        });\n        setPokChosen(true);\n      }\n    );\n    }\n    \n  };\n  \n  return (\n    <>\n      <div className=\"Head\">\n        <div className=\"title\">PokeSearch</div>\n        <input\n          className=\"SearchBox\"\n          type=\"text\"\n          placeholder=\"Pokemon Name\"\n          onChange={(event) => {\n            setpokName(event.target.value);\n          }}\n        ></input>\n        <button onClick={searchPok} className=\"SearchButton\">\n          Search\n        </button>\n        <div className=\"Message\"><p>Kindly use lower casing while entering the pokemon name</p></div>\n      </div>\n      <div className=\"display\">\n        {pokChosen ? (\n          <div className=\"chosenDisplay\">\n            <div className=\"displayText\">\n              <h1>{pokemon.name}</h1>\n              <div className=\"displayPicture\">\n                <img\n                  src={pokemon.front_image}\n                  alt=\"Nothing Found\"\n                  width=\"150px\"\n                  height=\"150px\"\n                ></img>\n                <img\n                  src={pokemon.back_image}\n                  alt=\"Nothing Found\"\n                  width=\"150px\"\n                  height=\"150px\"\n                ></img>\n              </div>\n\n              <p>\n                Type:{pokemon.type}\n                <br />\n                Weight:{pokemon.weight}\n                <br />\n                Speed:{pokemon.speed}\n                <br />\n                HP:{pokemon.hp}\n                <br />\n                Attack:{pokemon.attack}\n                <br />\n                Defense:{pokemon.defense}\n              </p>\n            </div>\n          </div>\n        ) : (\n          <h3 className=\"NotChosenDisplay\">Choose Your Pokemon</h3>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}